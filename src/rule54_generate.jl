function rule54_generate()
    el = Edge.([(1,2),
    (2,3),
    (3,4),
    (4,5),
    (5,6),
    (6,7),
    (6,10),
    (7,8),
    (7,9),
    (7,10),
    (7,11),
    (8,9),
    (8,10),
    (8,11),
    (8,12),
    (10,11),
    (10,13),
    (11,12),
    (11,13),
    (12,15),
    (13,14),
    (14,18),
    (14,23),
    (15,16),
    (15,17),
    (16,17),
    (16,19),
    (16,20),
    (16,21),
    (17,20),
    (17,21),
    (17,18),
    (18,21),
    (19,20),
    (19,57),
    (20,21),
    (20,22),
    (21,22),
    (22,33),
    (22,30),
    (23,24),
    (24,25),
    (25,26),
    (25,27),
    (27,28),
    (28,29),
    (29,54),
    (30,31),
    (31,32),
    (32,33),
    (32,34),
    (33,56),
    (34,35),
    (35,36),
    (35,37),
    (36,37),
    (36,38),
    (36,39),
    (36,40),
    (37,38),
    (37,39),
    (37,54),
    (38,39),
    (38,40),
    (38,41),
    (39,41),
    (39,54),
    (40,43),
    (41,42),
    (42,50),
    (42,49),
    (43,45),
    (43,44),
    (43,45),
    (44,45),
    (44,46),
    (44,47),
    (44,49),
    (45,46),
    (45,47),
    (45,55),
    (46,47),
    (46,48),
    (46,55),
    (47,48),
    (47,49),
    (50,51),
    (51,52),
    (52,53),
    (56,58),
    (56,60),
    (57,58),
    (57,59),
    (58,59),
    (58,60),
    (59,60),
    (59,61),
    (60,61)])

    locations = [(-9, -4),
    (-9, -2),
    (-7, -2),
    (-5, -2),
    (-3, -2),
    (-1, -1),
    (-2, 1),
    (-2, 2),
    (-4, 2),
    (0, 1),
    (0, 2),
    (-1, 4),
    (1, 1),
    (3, 0),
    (1, 5),
    (3, 5),
    (3, 4),
    (4, 2),
    (4, 7),
    (5, 5),
    (5, 4),
    (6, 4),
    (3, -2),
    (5, -2),
    (7, -2),
    (7, -4),
    (9, -2),
    (11, -2),
    (13, -2),
    (7, 2),
    (9, 2),
    (10, 4),
    (8, 5),
    (12, 4),
    (12, 2),
    (14, 2),
    (14, 1),
    (16, 2),
    (16, 1),
    (15, 4),
    (17, 1),
    (19, 0),
    (17, 5),
    (19, 4),
    (19, 5),
    (21, 5),
    (21, 4),
    (22, 4),
    (20, 2),
    (19, -2),
    (21, -2),
    (23, -2),
    (23, -4),
    (15, -1),
    (20, 7),
    (8, 7),
    (5, 8),
    (7, 8),
    (6, 9),
    (8, 9),
    (7, 11)]


    weights = [1,
    2,
    2,
    2,
    2,
    2,
    4,
    4,
    1,
    4,
    4,
    2,
    2,
    3,
    2,
    4,
    4,
    2,
    2,
    4,
    4,
    2,
    2,
    2,
    3,
    1,
    2,
    2,
    2,
    1,
    1,
    2,
    2,
    2,
    2,
    4,
    4,
    4,
    4,
    2,
    2,
    3,
    2,
    4,
    4,
    4,
    4,
    1,
    2,
    2,
    2,
    2,
    1,
    2,
    1,
    2,
    2,
    2,
    2,
    2,
    1]

    return SimpleGraph(el), locations, weights, 1, 26, 53, 61
end
# weights[1] = -50
# weights[26] = -50
# weights[52] = -50

# locations = map(t->t.*100, locations)
# locations = map(t->(t[1], -t[2]), locations)
# graph = SimpleGraph(el)

# LuxorGraphPlot.show_graph(graph, locations;format = :png)

# problem = GenericTensorNetwork(IndependentSet(graph, weights));
# max3_configs = read_config(solve(problem, SingleConfigMax(3))[])

# spectrum = solve(problem, SizeMax(3))[]

# max_config_weighted = solve(problem, SingleConfigMax())[]
# show_graph(graph, locations; format=:png, vertex_colors=
        #   [iszero(max_config_weighted.c.data[i]) ? "white" : "red" for i=1:nv(graph)])

# show_configs(graph, locations, [max3_configs[i] for i=1:3, j=1:1]; padding_top=20)